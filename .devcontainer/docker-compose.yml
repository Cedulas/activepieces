version: '3.8'

networks:
  activepieces:

services:
  selenium-hub:
    image: seleniarm/hub:latest
    # image: selenium/hub:4.21.0
    # platform: linux/amd64
    container_name: selenium-hub

    ports:
      - 4444:4444

  chrome:
    image: seleniarm/node-chromium:latest
    # image: selenium/node-chrome:4.21.0
    # platform: linux/amd64
    volumes:
      - /dev/shm:/dev/shm
      - ./files:/shared
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_OVERRIDE_MAX_SESSIONS=true
      - SE_NODE_MAX_SESSIONS=1
      - SE_ENABLE_MANAGED_DOWNLOADS=true
    command: >
      bash -c 'SE_OPTS="--enable-managed-downloads true" /opt/bin/entry_point.sh'

  firefox:
    image: seleniarm/node-firefox:latest
    # image: selenium/node-firefox:4.21.0
    # platform: linux/amd64
    volumes:
      - /dev/shm:/dev/shm
      - ./files:/shared
    environment:
      - SE_EVENT_BUS_HOST=selenium-hub
      - SE_EVENT_BUS_PUBLISH_PORT=4442
      - SE_EVENT_BUS_SUBSCRIBE_PORT=4443
      - SE_NODE_OVERRIDE_MAX_SESSIONS=true
      - SE_NODE_MAX_SESSIONS=1
      - SE_ENABLE_MANAGED_DOWNLOADS=true
    command: >
      bash -c 'SE_OPTS="--enable-managed-downloads true" /opt/bin/entry_point.sh'

  app:
    privileged: true
    build:
      context: .
      dockerfile: Dockerfile
      args:
        # Update 'VARIANT' to pick an LTS version of Node.js: 18, 16, 14.
        # Append -bullseye or -buster to pin to an OS version.
        # Use -bullseye variants on local arm64/Apple Silicon.
        VARIANT: 18-bullseye

    volumes:
      - ..:/workspace:cached

    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    # network_mode: service:redis

    ports:
      - 3000:3000
      - 9229:9229
      - 4200:4200

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

    # Uncomment the next line to use a non-root user for all processes.
    # user: node

    # Use "forwardPorts" in **devcontainer.json** to forward an app port locally.
    # (Adding the "ports" property to this file will not forward from a Codespace.)

  db:
    image: postgres:14.4
    environment:
      POSTGRES_DB: activepieces
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: A79Vm5D4p2VQHOp2gd5
    # network_mode: service:redis
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7.0.7
    volumes:
      - redis_data:/data

    # ports:
    #   - 3000:3000
    #   - 9229:9229
    #   - 4200:4200
    #   - 4444:4444

volumes:
  postgres_data:
  redis_data:
